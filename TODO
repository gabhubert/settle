# preview

  [ ] finish cli
    [ ] cli install
    [ ] transfer command
    [ ] pay command
    [ ] register command
    [ ] Mint-Protocol-Version header
  [ ] finish register
    [ ] send email on create user
    [ ] verify user
    [ ] roll user
    [ ] site credentials page
    [ ] setup LetsEncrypt
    [ ] setup loggly
  [ ] finish mint
    [ ] setup LetsEncrypt
    [ ] Mint-Protocol-Version header
    [ ] setup loggly
  [ ] finish site
    [ ] have the get started guide on github, to generate stars?
    [ ] credentials page
    [ ] blog post draft
    [ ] setup loggly
  [ ] send r?

# cli

  [ ] Mint-Protocol-Version header
  [ ] transfer command
  [ ] pay command
  [ ] register command
  [?] add confirmations to actions
  [x] logout command
  [x] fix get parameter for common
  [x] list balances
  [x] remove mint (automatically mint)

  settle register
    > pick mint
    > input email

# register

  [ ] send email on create user
  [ ] verify user
  [ ] roll user
  [ ] site credentials page
  [ ] setup LetsEncrypt

# mint

  [ ] Mint-Protocol-Version header
  [ ] default LetsEncrypt SSL cert provisioning in production
  [~] list endpoint
    [ ] list asset operations
    [x] list asset offers (order book)
    [x] list asset balances
    [x] list balances
    [x] list assets
  [x] retrieve asset publicly
  [x] fix offer fixup on transaction expiration
  [x] split endpoints between creation and propagation
  [x] balance propogation
  [x] pass DSN for DB, support Postgres
  [x] check expiry at settlement
  [x] check expiry of transactions at creation
  [x] transaction expiration
  [x] async proceses
  [x] propagation protocol for both operations and offers
  [x] idempotency of propagation (load offer/operation and save if they exist and return 200)
  [x] validate asset is created when creating offer and test
  [x] figure out when to set the offer as consumed (multiple crossings might be reserved)
  [x] remove user from records entirely?
  [x] remove the ability to create an operation directly?
  [x] transaction starting from an asset not owned by owner
  [x] janitorial work on test extractions (assert instead of fatal)
  [x] enforce we handle hops in order (we handle them all)
  [x] enforce the hops belong to the right mint
  [x] secure concurrent transaction settlement
  [x] secure concurrent transaction creation and settlement
  [x] transaction settlement
  [x] transaction locks
  [x] transaction creation
  [x] replace 1000*1000 by protocol constant
  [x] log prefix (mint)
  [x] make user optional for propagated transactions (or other objects)
  [x] move status values to protocol
  [x] move Execute to ctx
  [x] remove nil from creation operation, prevent issuer from owning balance
  [x] rename Normalized something Address to Owner
  [x] split controller into endpoint.CreateXXX object with Execute and Validate
  [x] move mint host to context

  # tests

    [ ] offer closing + attempt transaction on it
    [ ] offer closing of an offer not owned by caller
    [ ] test canonical transaction expiry calculation (min of all propagated)
    [ ] test that consumes an offer entirely (check status)
    [~] transaction tests with misbehaving mint
    [x] test asset retrieval
    [x] test settling an expired transaction
    [x] transaction expiration and balance fixup
    [x] transaction expiration and offer fixup
    [x] test async offer/operation propagation
    [x] operation propagation
    [x] offer propagation
    [x] concurrent call to transaction settlement attack test
    [x] test settlement with erroneous secret
    [x] concurrent call to transaction creation attack test
    [x] test transaction that uses the same user twice
    [x] test transaction that uses more than what is left on an offer
    [x] make the DB a context value that can be created independently for tests
    [x] find a way to set the MintHost after start or set the mux after creating the httptest.Server
    [x] support in memory db

  # async processes

    [x] offer propagation
    [x] operation propagation
    [x] transaction expiry

# site

  [ ] have the get started guide on github, to generate stars?
  [ ] credentials page
  [ ] blog post draft

# r? preview

  dm
  gdb
  rauchg
  gabhubert
  acavailhez
  kwi
  gyril
  migliris
